<AbellComponent>
<template>
  <button onclick="toggleTheme(this)" aria-label="Activate Dim Mode" aria-pressed="false" title="Toggle Theme" class="dark-mode-toggle nav-item {{ props.classes }} ">
    <span class="sun"><i class="i-sun text-l"></i> <span class="mode-label">Theme: Light</span></span>
    <span class="cloud"><i class="i-cloud-sun text-l"></i> <span class="mode-label">Theme: Dim</span></span>
    <span class="moon"><i class="i-moon"></i> <span class="mode-label">Theme: Dark</span></span>
  </button>
</template>

<style inlined>
  /* DARK MODE SWITCH */
  .dark-mode-toggle {
    cursor: pointer;
    float: right;
    border:none;
    background:transparent;
    padding: 17px 20px !important;
    width: 40px;
  }
  .dark-mode-toggle.float-false {
    float: unset;
  }

  .dark-mode-toggle.sidebar-button {
    position: absolute;
    bottom: 0px;
    display: none;
    width: 100%;
    text-align: left;
    background-color: var(--elevation-3);
    max-height: 60px;
  }

  .mode-label {
    display: none;
  }

  .dark-mode-toggle.sidebar-button .mode-label {
    display: inline-block;
    color: var(--font-color-primary);
    font-weight: bold;
    font-size: .9rem;
    position: absolute;
    left: 60px;
    bottom: 16px;
  }

  body:not(.user-is-tabbing) .dark-mode-toggle:focus {
    outline: none;
  }

  body:not(.user-is-tabbing) button::-moz-focus-inner {
    border: 0;
  }

  button i.i-moon {
    font-size: 2rem;
    position: relative;
    top: -6px;
    left: 2px;
  }

  button i.i-sun,
  button i.i-cloud-sun {
    position: relative;
    top: 4px;

  }


  button i.i-moon,
  button i.i-cloud-sun {
    color: #fff;
  }

  button i.i-sun {
    color: #333;
  }

  body .dark-mode-toggle .moon,
  body .dark-mode-toggle .cloud {
    display: none
  }
  body .dark-mode-toggle .sun {display: inline-block}

  body.dim .dark-mode-toggle .moon,
  body.dim .dark-mode-toggle .sun {
    display: none;
  }
  
  body.dim .dark-mode-toggle .cloud {
    display: inline-block;
  }


  body.dark .dark-mode-toggle .cloud,
  body.dark .dark-mode-toggle .sun {
    display: none;
  }

  body.dark .dark-mode-toggle .moon {
    display: inline-block;
  }

  @media (max-width: 768px) {
    .dark-mode-toggle.sidebar-button {
      display: block;
    }
  }
</style>

<script inlined>
  function setTheme(theme, shouldStore = false) {
    const toggleButtons = scopedSelectorAll('.dark-mode-toggle');
    if (theme === 'light') {
      document.body.classList.remove('dim');
      document.body.classList.remove('dark');
      document.body.classList.remove('dark-dim');
      if (shouldStore) window.localStorage.setItem('prefers-theme', 'light');
      toggleButtons.forEach(toggleButton => {
        toggleButton.setAttribute('aria-label', 'Activate Dim Mode');
      })
    } else if (theme === 'dim') {
      document.body.classList.remove('dark');
      document.body.classList.add('dim');
      document.body.classList.add('dark-dim');
      
      if (shouldStore) window.localStorage.setItem('prefers-theme', 'dim');
      toggleButtons.forEach(toggleButton => {
        toggleButton.setAttribute('aria-label', 'Activate Dark Mode');
      })
    }else {
      document.body.classList.remove('dim');
      document.body.classList.add('dark');
      document.body.classList.add('dark-dim');
      if (shouldStore) window.localStorage.setItem('prefers-theme', 'dark');
      toggleButtons.forEach(toggleButton => {
        toggleButton.setAttribute('aria-label', 'Activate Light Mode');
      })      
      
    }
  }

  const localPreference = window.localStorage.getItem('prefers-theme');

  if (localPreference) {
    setTheme(localPreference);
  } else if (window.matchMedia('(prefers-color-scheme: dark)').matches){
    setTheme('dim');
  }

  function toggleTheme(toggleButton) {
    document.querySelectorAll('.dark-transition').forEach((el) => {      
      if (el.dataset.transitProps) {
        el.style.transition = el.dataset.transitProps
          .split(',')
          .map(transitProp => `${transitProp} .3s ease`)
          .join(', ');

      } else {
        el.style.transition = 'all .3s ease';
      }
    })

    if (document.body.classList.contains('dim')) {
      setTheme('dark', true);
    } else if (document.body.classList.contains('dark')) {
      setTheme('light', true);
    } else {
      setTheme('dim', true);
    }
  }
</script>
</AbellComponent>