<AbellComponent>
{{
  const routes = require('./routes.js');
  const { $root, $path } = props;

  function renderRoutes(routesObj, isChild = false) {
    const renderedLi = Object.entries(routesObj).map((route) => {
      const isDirectPath = typeof route[1] === 'string';
      let isActive = isDirectPath && !isChild && route[1].includes($path);

      if (!isDirectPath) {
        isActive = route[1].path.includes($path);
      }

      return /* html */ `
        <li>
          <a 
            class="menu-item ${isActive ? 'active' : ''}" 
            href="${isDirectPath ? route[1] : route[1].path}"
          >
            <i class="i i-line">-</i>
            <i class="i i-check"></i>
            <span class="menu-text">${route[0]}</span>
          </a>
          ${
            isDirectPath
            ? ''
            : isActive ? renderRoutes(route[1].routes, true) : ''
          }
        </li>
      `})
      .join('');

    return '<ul>' + renderedLi + '</ul>'
  }
}}

<template>
  <div class="nav-placeholder"></div>
  <nav class="dark-transition sidebar" data-transit-props="background-color, border">
    {{ renderRoutes(routes) }}   
  </nav>
  <div class="nav-overlay"></div>
</template>

<script>
  if (scopedSelector('.nav-overlay')) {
    scopedSelector('.nav-overlay').addEventListener('click', () => {
      document.body.classList.remove('open-nav');
    })
  }

  if (window.matchMedia("(max-width: 768px)")) {
    scopedSelectorAll('nav a.menu-item').forEach((menuItem) => 
      menuItem.addEventListener('click', () => {
        document.body.classList.remove('open-nav');
      })
    )
  }
</script>

<style>
  nav {
    position: fixed;
    left: 0px;
    top: 0px;
    z-index: 1;
    padding-top: 90px;
    height: 100%;
    border-right: 1px solid var(--elevation-2);
    width: 260px;
    overflow-y: auto;
  }

  nav a.menu-item {
    display: block;
    padding: 8px 20px;
    text-decoration: none;
    color: var(--font-primary);
  }

  nav a.menu-item .i {
    display: none;
  }

  nav a.menu-item.active {
    color: var(--sidebar-active-link);
    font-weight: bold;
  }

  .nav-overlay {
    display: none;
  }

  ul {
    list-style: none;
    padding-left: 0px;
  }

  li {
    font-size: 1.1rem;
  }

  li li {
    font-size: 1rem;
  }

  li li a.menu-item .i {
    content: '- ';
    padding-left: 12px;
    font-size: larger;
    padding-top: 2px;
    color: var(--link-color);
    display: none;
    width: 30px;
  }

  li li a.menu-item {
    display: flex;
    padding: 0px 0px;
    padding-left: 8px;
  }

  li li a.menu-item .i-check {
    font-size: .8rem;
    position: relative;
    top: 6px;
    left: -2px;
    text-shadow: 0px 0px 8px #ff99;
  }

  li li a.menu-item.done .i-check,
  li li a.menu-item .i-line {
    display: inline-block;
  }

  li li a.menu-item .i-check,
  li li a.menu-item.done .i-line {
    display: none;
  }

  li li a.menu-item .menu-text {
    display: inline-block;
    padding: 5px 8px 5px 0px;
    margin-left: 0px;
    opacity: .9;
    flex: 1;
  }

  body.dark-dim nav a.menu-item:hover {
    color: #fff;
    transition: color .2s ease;
  }


  @media (max-width: 768px) {
    nav {
      background-color: var(--background-primary);
      left: -100%;
      transition: left .2s ease;
    }

    body.open-nav nav.sidebar {
      left: 0%;
      transition: left .3s ease;
      z-index: 2;
    }

    body.open-nav nav.sidebar + .nav-overlay {
      display: block;
      position: fixed;
      top: 0px;
      left: 0px;
      height: 100%;
      width: 100%;
      background-color: #0008;
      z-index: 1;
    }
  }
</style>
</AbellComponent>